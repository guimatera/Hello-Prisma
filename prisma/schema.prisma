// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String?

  posts Post[]
  profile Profile?

  followedBy Follows[] @relation("following")
  following  Follows[] @relation("follower")

   @@map("Users")
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id], onDelete: Cascade)
  followingId Int

  @@id([followerId, followingId])
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String?
  published Boolean @default(false)

  author User @relation(fields: [authorId], references: [id],  onDelete: Cascade)
  authorId Int

  postCategories PostCategories[] 

  @@map("Posts")
}

model Profile {
  id Int @id @default(autoincrement())

  user User @relation(fields: [userId], references: id, onDelete: Cascade)
  userId Int @unique

  @@map("Profiles")
}

model Category {
  id  Int @id @default(autoincrement())
  name String
  
  postCategories PostCategories[]

  @@map("Categories")
}

model PostCategories {
  type String @default("undefined")

  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int

  @@id([postId, categoryId])
}